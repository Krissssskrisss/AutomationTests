import com.codeborne.selenide.SelenideElement;
import org.testng.annotations.Test;

import java.util.List;

import static java.awt.Color.pink;
import static org.testng.Assert.assertFalse;
import static org.testng.Assert.assertTrue;


public class GoogleOpenTest {

    @Test
    void verifyGoogleSearchPage() {
        String linkText = new GoogleHomePage()
                .openGoogleHomepage()
                .search("Funny Kittens")
                .getFirstResultTextLink();

        assertTrue(linkText.contains("Funny Kittens"), "No kittens was found!");
    }

    @Test
    void verifyGoogleImageBar() {
        List<SelenideElement> searchResult = new GoogleHomePage()
                .openGoogleHomepage()
                .search("Funny Kittens")
                .navigateToImageBar()
                .getSearchResult();

        assertTrue(searchResult.size() >= 5, "Not correct search result");
    }

    @Test
    void verifyGoogleLogoIsDisplayed() {
        GoogleSearchResultPage searchResultPage = new GoogleHomePage()
                .openGoogleHomepage()
                .search("Funny Kittens");

        boolean isIslogoDisplayed = searchResultPage.IslogoDisplayed();
        assertTrue(isIslogoDisplayed, "Logo should be displayed");

        searchResultPage
                .hideLogo()
                .IslogoDisplayed();
        assertFalse(isIslogoDisplayed, "Logo is hide");

    }

    @Test
    void verifyChangingColorToFirstLink() {

        String searchTerm = "kitten picture";
        GoogleSearchResultPage searchResultPage = new GoogleHomePage()
                .openGoogleHomepage()
                .search(searchTerm);

        List<SelenideElement> tenLinksElements = searchResultPage.getTenLinksResults();

        for (SelenideElement link : tenLinksElements) {
            assertTrue(link.text().contains("kitten picture"), "Incorrect text");
        }

        SelenideElement firstLink = tenLinksElements.get(0);
        searchResultPage.changeColor(firstLink, pink);

        boolean hasChangedColor = firstLink
                .getCssValue("color")
                .equals("pink");

        assertTrue(hasChangedColor, "The color isn't changed");
    }

    @Test
    void verifyPotterBooks() {

        String searchTerm = "Harry Potter";
        BooksSearchResultPage booksSearchResults = new GoogleHomePage()
                .openGoogleHomepage()
                .search(searchTerm)
                .navigateToBooksTab();

        String textHarryPotter = booksSearchResults.searchHarryPotterText(searchTerm);

        assertTrue(textHarryPotter.contains(searchTerm), "Harry Potter text isn't found");
    }

    @Test
    void verifyYahooPage() {

        String searchTermYahoo = "Google";
        YahooAnswersPage searchResultPage = new YahooHomePage()
                .openYahooPage()
                .search(searchTermYahoo)
                .navigateToAnswersPage();

        List<SelenideElement> tenLinksElements = searchResultPage.getListLink();

        assertTrue(tenLinksElements.contains(searchTermYahoo), "Text isn't correct");
        assertTrue(tenLinksElements.size() >= 10, "Not correct search result");
    }
}
